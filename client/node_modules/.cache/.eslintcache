[{"/Users/ghost/Desktop/316-FinalProject/client/src/index.js":"1","/Users/ghost/Desktop/316-FinalProject/client/src/App.js":"2","/Users/ghost/Desktop/316-FinalProject/client/src/reportWebVitals.js":"3","/Users/ghost/Desktop/316-FinalProject/client/src/auth/index.js":"4","/Users/ghost/Desktop/316-FinalProject/client/src/store/index.js":"5","/Users/ghost/Desktop/316-FinalProject/client/src/components/index.js":"6","/Users/ghost/Desktop/316-FinalProject/client/src/common/jsTPS.js":"7","/Users/ghost/Desktop/316-FinalProject/client/src/components/AppBanner.js":"8","/Users/ghost/Desktop/316-FinalProject/client/src/components/EditToolbar.js":"9","/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeScreen.js":"10","/Users/ghost/Desktop/316-FinalProject/client/src/transactions/MoveItem_Transaction.js":"11","/Users/ghost/Desktop/316-FinalProject/client/src/components/RegisterScreen.js":"12","/Users/ghost/Desktop/316-FinalProject/client/src/components/ListCard.js":"13","/Users/ghost/Desktop/316-FinalProject/client/src/components/SplashScreen.js":"14","/Users/ghost/Desktop/316-FinalProject/client/src/transactions/UpdateItem_Transaction.js":"15","/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeWrapper.js":"16","/Users/ghost/Desktop/316-FinalProject/client/src/components/Statusbar.js":"17","/Users/ghost/Desktop/316-FinalProject/client/src/components/Top5Item.js":"18","/Users/ghost/Desktop/316-FinalProject/client/src/components/LoginScreen.js":"19","/Users/ghost/Desktop/316-FinalProject/client/src/components/WorkspaceScreen.js":"20","/Users/ghost/Desktop/316-FinalProject/client/src/components/DeleteModal.js":"21","/Users/ghost/Desktop/316-FinalProject/client/src/components/ErrorModal.js":"22","/Users/ghost/Desktop/316-FinalProject/client/src/api/index.js":"23","/Users/ghost/Desktop/316-FinalProject/client/src/components/Copyright.js":"24","/Users/ghost/Desktop/316-FinalProject/client/src/components/Community.js":"25","/Users/ghost/Desktop/316-FinalProject/client/src/components/AllLists.js":"26","/Users/ghost/Desktop/316-FinalProject/client/src/components/UserLists.js":"27"},{"size":928,"mtime":1637788529808,"results":"28","hashOfConfig":"29"},{"size":1622,"mtime":1638463675141,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1637788529809,"results":"31","hashOfConfig":"29"},{"size":5521,"mtime":1638808980091,"results":"32","hashOfConfig":"29"},{"size":23601,"mtime":1638810494536,"results":"33","hashOfConfig":"29"},{"size":1024,"mtime":1638380212615,"results":"34","hashOfConfig":"29"},{"size":6473,"mtime":1637788529805,"results":"35","hashOfConfig":"29"},{"size":10958,"mtime":1638724180152,"results":"36","hashOfConfig":"29"},{"size":1581,"mtime":1637788529806,"results":"37","hashOfConfig":"29"},{"size":3872,"mtime":1638810201018,"results":"38","hashOfConfig":"29"},{"size":703,"mtime":1637788529809,"results":"39","hashOfConfig":"29"},{"size":5902,"mtime":1638493753443,"results":"40","hashOfConfig":"29"},{"size":11222,"mtime":1638672456529,"results":"41","hashOfConfig":"29"},{"size":414,"mtime":1637933907906,"results":"42","hashOfConfig":"29"},{"size":726,"mtime":1637788529809,"results":"43","hashOfConfig":"29"},{"size":400,"mtime":1638197060925,"results":"44","hashOfConfig":"29"},{"size":1218,"mtime":1638398264571,"results":"45","hashOfConfig":"29"},{"size":4401,"mtime":1638317089393,"results":"46","hashOfConfig":"29"},{"size":3330,"mtime":1638798702444,"results":"47","hashOfConfig":"29"},{"size":9566,"mtime":1638498848874,"results":"48","hashOfConfig":"29"},{"size":1518,"mtime":1637788529806,"results":"49","hashOfConfig":"29"},{"size":1193,"mtime":1637788529806,"results":"50","hashOfConfig":"29"},{"size":1866,"mtime":1637788529804,"results":"51","hashOfConfig":"29"},{"size":452,"mtime":1637788529805,"results":"52","hashOfConfig":"29"},{"size":3153,"mtime":1638810310490,"results":"53","hashOfConfig":"29"},{"size":3331,"mtime":1638810183661,"results":"54","hashOfConfig":"29"},{"size":3153,"mtime":1638810171587,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"rdr87g",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ghost/Desktop/316-FinalProject/client/src/index.js",[],["117","118"],"/Users/ghost/Desktop/316-FinalProject/client/src/App.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/reportWebVitals.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/auth/index.js",["119","120"],"import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER:    \"LOGIN_USER\",\n    LOGOUT_USER:   \"LOGUT_USER\",\n    SET_ERR:       \"SET_ERR\",\n    REMOVE_ERR:    \"REMOVE_ERR\"\n\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        error: null,\n        guest: false\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    error: null\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: null\n                })\n            }\n            case AuthActionType.LOGIN_USER:{\n                return setAuth ({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: null\n                })\n            }\n            case AuthActionType.LOGIN_USER:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            case AuthActionType.SET_ERR:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: payload.message\n                })\n            }\n            case AuthActionType.LOGOUT_USER:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            case AuthActionType.REMOVE_ERR:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.removeError = function () {\n        authReducer({\n            type: AuthActionType.REMOVE_ERR,\n            payload: {\n                loggedIn: null,\n                user: null\n            }\n        });\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.GET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n        }\n    }\n\n    auth.logoutUser = async function(userData, store){\n        console.log(\"trying to logou\");\n        authReducer({\n            type: AuthActionType.LOGOUT_USER,\n            payload: {\n                user: null\n            }\n        })\n        history.push(\"/\");\n        \n    }\n\n    auth.loginUser = async function(userData, store){\n        console.log(\"Attempting to Login\");\n\n        let response;\n        let error;\n\n        try {\n            response = await api.loginUser(userData);\n        } catch (err){\n            error = err.response.data.errorMessage;\n        }\n\n        //console.log(error);\n\n        if (response){\n            if (response.status === 200) {\n                console.log(response);\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                    user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n                // set home here\n            }\n        } else {\n            authReducer({\n                type: AuthActionType.SET_ERR,\n                payload: {\n                    message: error\n                }\n            });\n            console.log(\"Here\");\n        }\n    }\n\n    auth.registerUser = async function(userData, store) {\n        console.log(\"Trying to reegisster User\");\n        let response;\n        let error;\n\n        try {\n            response = await api.registerUser(userData);\n        } catch (err){\n            error = err.response.data.errorMessage;\n        }    \n\n        if (response){\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n            }\n        } else {\n            authReducer({\n                type: AuthActionType.SET_ERR,\n                payload: {\n                    message: error\n                }\n            });\n            console.log(error);\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","/Users/ghost/Desktop/316-FinalProject/client/src/store/index.js",["121"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/index.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/common/jsTPS.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/AppBanner.js",["122","123"],"import { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../auth';\nimport { GlobalStoreContext } from '../store'\nimport EditToolbar from './EditToolbar'\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PersonIcon from '@mui/icons-material/Person';\nimport PeopleIcon from '@mui/icons-material/People';\nimport FunctionsIcon from '@mui/icons-material/Functions';\nimport SortIcon from '@mui/icons-material/Sort';\nimport TextField from '@mui/material/TextField';\n\nexport default function AppBanner() {\n    const { auth } = useContext(AuthContext);\n    const { store } = useContext(GlobalStoreContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [anchorEl2, setAnchorEl2] = useState(null);\n    const [criteria, setCriteria] = useState(\"\");\n    const isMenuOpen = Boolean(anchorEl);\n    const isMenuOpen2 = Boolean(anchorEl2);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleProfileMenuOpen2 = (event) => {\n        console.log(\"here\");\n        setAnchorEl2(event.currentTarget);\n    };\n\n    function updateCriteria(event){\n        console.log(event.target.value);\n        if (store.whichLists !== \"users\"){\n            store.updateSortVal(event.target.value);\n        } else {\n            setCriteria(event.target.value);\n        }\n    }\n\n    function userSelection(event){\n        if (event.code === \"Enter\"){\n            store.updateSortVal(criteria);\n        }\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        setAnchorEl2(null);\n    };\n\n    const handleLogout = () => {\n        handleMenuClose();\n        store.setHome();\n        auth.logoutUser();\n    }\n\n    const handleCreateNewList = () => {\n        console.log(\"Trying to crreaete a new list\");\n        store.createNewList();\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const loggedOutMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}><Link to='/register/'>Create New Account</Link></MenuItem>\n            <MenuItem onClick={handleMenuClose}><Link to='/login/'>Login</Link></MenuItem>\n            <MenuItem onClick={handleMenuClose}><Link to='/all-lists/'>Guest</Link></MenuItem>\n        </Menu>\n    );\n    const loggedInMenu = \n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n        \n    const sortMenu = \n    <Menu\n            anchorEl={anchorEl2}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen2}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={sortDateN}>Publish Date (Newest)</MenuItem>\n            <MenuItem onClick={sortDateO}>Publish Date (Oldest)</MenuItem>\n            <MenuItem onClick={sortView}>Views</MenuItem>\n            <MenuItem onClick={sortLike}>Likes</MenuItem>\n            <MenuItem onClick={sortDislike}>Dislikes</MenuItem>\n        </Menu>\n\n    function sortDateN() {\n        store.setSortBy(\"dn\");\n        handleMenuClose();\n    }\n\n    function sortDateO() {\n        store.setSortBy(\"do\");\n        handleMenuClose();\n    }\n\n    function sortView() {\n        store.setSortBy(\"v\");\n        handleMenuClose();\n    }\n\n    function sortDislike() {\n        store.setSortBy(\"d\");\n        handleMenuClose();\n    }\n\n    function sortLike() {\n        store.setSortBy(\"l\");\n        handleMenuClose();\n    }\n\n\n    let editToolbar = \"\";\n    let menu = loggedOutMenu;\n    if (auth.loggedIn) {\n        menu = loggedInMenu;\n    }\n    \n    function getAccountMenu(loggedIn) {\n        if (loggedIn){\n            let initial = auth.user.firstName.charAt(0).toUpperCase() + '' + auth.user.lastName.charAt(0).toUpperCase();\n            return initial;\n        }\n            \n        return <AccountCircle />;\n    }\n\n    function goToAllLists(){\n        store.allLists();\n    }\n\n    function goToHome(){\n        store.setHome();\n    }\n\n    function goToUsers(){\n        store.users();\n    }\n\n    let tBar = \"\";\n    if (auth.loggedIn){\n        tBar = \n        <AppBar position=\"static\" style={{ background: 'white' }}>\n                    <Toolbar>\n                        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"start\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={goToHome}\n                                color=\"inherit\"\n                                disabled={auth.guest}\n                            >\n                                <HomeIcon style = {{fontSize: \"45px\", color: \"black\" }}/>\n                            </IconButton>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"start\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                color=\"inherit\"\n                                onClick={goToAllLists}\n                            >\n                                <PeopleIcon style = {{fontSize: \"45px\", color: \"black\"  }}/>\n                            </IconButton>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"start\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={goToUsers}\n                                color=\"inherit\"\n                            >\n                                <PersonIcon style = {{fontSize: \"45px\", color: \"black\"  }}/>\n                            </IconButton>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"start\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleProfileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <FunctionsIcon style = {{fontSize: \"45px\", color: \"black\"  }}/>\n                            </IconButton>\n                        </Box>\n                        <TextField onKeyPress={userSelection} onChange={updateCriteria} sx={{ flexGrow: 1 }} id=\"outlined-basic\" variant=\"outlined\" />\n                        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton\n                                size=\"large\"\n                                edge=\"end\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleProfileMenuOpen2}\n                                color=\"inherit\"\n                            >\n                                <Typography\n                                    variant=\"h6\"\n                                    noWrap\n                                    component=\"div\"\n                                    sx={{ display: { xs: 'none', sm: 'block' } }}\n                                    style = {{color: \"black\"}}  \n                                > \n                                    Sort By  \n                                </Typography>\n                                <SortIcon style = {{fontSize: \"45px\", color: \"black\"  }}/>\n                            </IconButton>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n    }\n\n    return (\n        <Box>\n            <Box sx={{ flexGrow: 1 }}>\n                <AppBar position=\"static\" style={{ background: '#35405f' }}>\n                    <Toolbar>\n                        <Typography                        \n                            variant=\"h4\"\n                            noWrap\n                            component=\"div\"\n                            sx={{ display: { xs: 'none', sm: 'block' } }}                        \n                        >\n                            <Link style={{ textDecoration: 'none', color: 'white' }} to='/'>T<sup>5</sup>L</Link>\n                        </Typography>\n                        <Box sx={{ flexGrow: 1 }}>{editToolbar}</Box>\n                        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"end\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleProfileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                { getAccountMenu(auth.loggedIn) }\n                            </IconButton>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n                {\n                    menu\n                }\n                {\n                    sortMenu\n                }\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>{tBar}</Box>\n        </Box>\n    );\n}","/Users/ghost/Desktop/316-FinalProject/client/src/components/EditToolbar.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeScreen.js",["124","125","126","127","128","129","130","131","132","133"],"/Users/ghost/Desktop/316-FinalProject/client/src/transactions/MoveItem_Transaction.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/RegisterScreen.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/ListCard.js",["134","135","136","137","138"],"import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport { Collapse } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport AuthContext from '../auth';\n\n/*\n    This is a card in our list of top 5 lists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    const [editActive, setEditActive] = useState(false);\n    const [text, setText] = useState(\"\");\n    const { idNamePair } = props;\n    const [open, setOpen] = useState(false); // Will help with opening/closing collapse\n\n    function handleClick () {\n        setOpen(!open);\n        if (!open){\n            if  (idNamePair.date !== \"edit\")\n                addView()\n        }\n      };\n\n    function addView(){\n        console.log(\"In addView\");\n        store.addView(idNamePair._id);\n    }\n\n    function handleLoadList(event, id) {\n        if (!event.target.disabled) {\n            // CHANGE THE CURRENT LIST\n        }\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsListNameEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    async function handleDeleteList(event, id) {\n        event.stopPropagation();\n        store.markListForDeletion(id);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        console.log(\"update text\");\n        setText(event.target.value);\n    }\n\n    function handleKeyEnter(event) {\n        if (event.code === \"Enter\") {\n            console.log(text);\n            store.addComment(idNamePair._id, text);\n            setText(\"\");\n            event.target.value = \"\";\n        }\n    }\n\n    function handleEdit(){\n        store.setCurrentList(idNamePair._id);\n    }\n\n    let bgc = \"lightblue\";\n    if (idNamePair.date === \"edit\"){\n        bgc = \"lightyellow\";\n    }\n\n    let edPub = \n        <Button onClick={handleEdit} style={{color: \"red\", textDecoration: \"underline\"}} variant=\"text\">\n            Edit\n        </Button>\n\n    if (idNamePair.date !== \"edit\"){\n        edPub = \n            <span> Published: {idNamePair.date}</span>\n    }\n\n    let comment = \"\";\n\n    if (idNamePair.date !== \"edit\"){\n        comment = <TextField onChange={handleUpdateText} onKeyPress={handleKeyEnter} fullWidth={true} label={\"Add Comment\"} id=\"outlined-basic\" variant=\"outlined\" ></TextField>;\n    }\n\n    let delBut = \"\";\n    if (store.whichLists === \"\"){\n        delBut = <IconButton onClick={(event) => {\n            handleDeleteList(event, idNamePair._id)\n        }} aria-label='delete'>\n            <DeleteIcon style={{fontSize:'20pt'}} />\n        </IconButton>\n    }\n\n    let dis = true;\n    if (idNamePair.date !== \"edit\"){\n        dis = false;\n    }\n\n    function addDislike(){\n        store.addDislike(idNamePair._id);\n        console.log(0);\n    }\n\n    function addLike(){\n        store.addLike(idNamePair._id);\n        console.log(1);\n    }\n\n    console.log(idNamePair);\n\n    let lColor = \"\";\n    let dColor = \"\";\n    if (idNamePair.usersD.includes(auth.user.userName)){\n        dColor = \"red\";\n    } else if (idNamePair.usersL.includes(auth.user.userName)){\n        lColor = \"green\"\n    }\n\n    let cardElement =\n        <Grid item xs={12} sx={{p:0,borderRadius: 5}} mt={2} style={{backgroundColor:bgc}}>\n                <Grid container spacing={0}>\n                    <Grid item xs={10}>\n                        <Typography variant=\"h5\"> {idNamePair.name} </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                    <IconButton disabled={dis} onClick={addLike} aria-label='edit'>\n                        <ThumbUpIcon style={{fill: lColor}}/>\n                    </IconButton>\n                    {idNamePair.likes}\n                    <IconButton disabled={dis} onClick={addDislike} aria-label='edit'>\n                        <ThumbDownIcon style={{fill: dColor}}/>\n                    </IconButton>\n                    {idNamePair.dislikes}\n                    {delBut}\n                    </Grid>\n                </Grid>\n                <Collapse in={open}>\n                <Grid container>\n                    <Grid item xs={6} sx={{p:1}}>\n                        {\n                            idNamePair.items.map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {index+1}. {item}\n                                </Typography>\n                            ))\n                        }\n                    </Grid>\n                    <Grid container direction={\"row\"} xs={6}>\n                        \n                        <Grid item sx={{p:1}} xs={12}><Paper style={{maxHeight:100, overflow: 'auto'}}>\n                        {\n                            idNamePair.comments.slice(0).reverse().map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {item}\n                                </Typography>\n                            ))\n                        }\n                        </Paper></Grid>\n                        <Grid item sx={{ flexGrow: 1,p:1 }}>                        \n                            {comment}\n                        </Grid>\n                    </Grid>\n                </Grid>\n        </Collapse>\n                <Box>\n                    <Typography sx={{p:1}}>By: {idNamePair.userName}</Typography>\n                </Box>\n                <Grid container>\n                    <Grid item xs={11}>\n                    {edPub}\n                    </Grid>\n                    <Grid item xs={1}>\n                    Views: {idNamePair.views}\n                    <IconButton onClick={handleClick} aria-label='delete'>\n                        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </IconButton>\n                    </Grid>\n                    \n                </Grid>\n        </Grid>\n    /*<List>\n        <Divider />\n        <ListItem\n            disabled={store.isListNameEditActive} \n            id={idNamePair._id}\n            key={idNamePair._id}\n            sx={{ marginTop: '0px', display: 'flex', pl: 1, pt: 0 , backgroundColor: \"white\"}}\n            button={false}\n            style={{\n                fontSize: '20pt',\n                width: '100%',\n            }}\n        >\n\n                <Box sx={{ p: 0, flexGrow: 1 }}>{idNamePair.name}</Box>\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbUpIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                    {idNamePair.likes}\n                </Box>\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbDownIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                    {idNamePair.dislikes}\n                </Box>\n                <Divider />\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={(event) => {\n                        handleDeleteList(event, idNamePair._id)\n                    }} aria-label='delete'>\n                        <DeleteIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                </Box>\n                \n        </ListItem>\n        <Collapse in={open}>\n                <Grid container>\n                    <Grid item xs={6} sx={{p:1}}>\n                        {\n                            idNamePair.items.map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {index+1}. {item}\n                                </Typography>\n                            ))\n                        }\n                    </Grid>\n                    <Grid container direction={\"row\"} xs={6}>\n                        \n                        <Grid item sx={{p:1}} xs={12}><Paper style={{maxHeight:100, overflow: 'auto'}}>\n                        {\n                            idNamePair.comments.slice(0).reverse().map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {item}\n                                </Typography>\n                            ))\n                        }\n                        </Paper></Grid>\n                        <Grid item sx={{ flexGrow: 1,p:1 }}>                        \n                            {comment}\n                        </Grid>\n                    </Grid>\n                </Grid>\n        </Collapse>\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>  \n                <Box sx={{ p: 1, display: 'flex', flexGrow: 1, backgroundColor: \"white\" }}>\n                    {edPub}\n                </Box>\n                <Box>\n                    <Typography sx={{p: 1}}>\n                        Views: {idNamePair.views}\n                    </Typography>\n                </Box>\n                <Box sx={{ backgroundColor: \"white\" }}>\n                    <IconButton onClick={handleClick} aria-label='delete'>\n                        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </IconButton>\n                </Box>\n            </Box>\n        </List>*/\n\n    if (editActive) {\n        cardElement =\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id={\"list-\" + idNamePair._id}\n                label=\"Top 5 List Name\"\n                name=\"name\"\n                autoComplete=\"Top 5 List Name\"\n                className='list-card'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={idNamePair.name}\n                inputProps={{style: {fontSize: 48}}}\n                InputLabelProps={{style: {fontSize: 24}}}\n                autoFocus\n            />\n    }\n    return (\n        cardElement\n    );\n}\n\nexport default ListCard;","/Users/ghost/Desktop/316-FinalProject/client/src/components/SplashScreen.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/transactions/UpdateItem_Transaction.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeWrapper.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Statusbar.js",["139"],"import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport AddIcon from '@mui/icons-material/Add';\nimport Fab from '@mui/material/Fab';\nimport { Box } from '@mui/system';\nimport AuthContext from '../auth'\n\n/*\n    Our Status bar React component goes at the bottom of our UI.\n    \n    @author McKilla Gorilla\n*/\nfunction Statusbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    let text =\"\";\n    if (store.currentList)\n        text = store.currentList.name;\n\n    function handleCreateNewList() {\n        store.createNewList();\n    }\n\n    let con = \"\";\n    console.log(\"tesadfsdafdst\", store.whichLists);\n    if (store.whichLists === \"\" && auth.user !== null){\n        con = \n            <Box>\n                <Fab \n                    color=\"primary\" \n                    aria-label=\"add\"\n                    id=\"add-list-button\"\n                    onClick={handleCreateNewList}\n                >\n                    <AddIcon />\n                </Fab>\n                Create New List\n            </Box>;\n        }\n    return (\n        <div id=\"top5-statusbar\">\n            {con}\n        </div>\n    );\n}\n\nexport default Statusbar;","/Users/ghost/Desktop/316-FinalProject/client/src/components/Top5Item.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/LoginScreen.js",["140"],"import * as React from 'react';\nimport { useContext } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { ErrorModal } from '.';\n\nimport AuthContext from '../auth'\nimport Copyright from './Copyright'\nimport { GlobalStoreContext } from '../store'\nimport { Container } from '@mui/material';\n\nconst theme = createTheme();\n\nexport default function LoginScreen() {\n    const { auth } = useContext(AuthContext);\n    const { store } = useContext(GlobalStoreContext)\n\n    const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    \n    auth.loginUser({\n        userName: formData.get('userName'),\n        password: formData.get('password')\n    }, store);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ErrorModal />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"userName\"\n              label=\"User Name\"\n              name=\"userName\"\n              autoComplete=\"userName\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","/Users/ghost/Desktop/316-FinalProject/client/src/components/WorkspaceScreen.js",["141","142","143"],"import { useContext, useState } from 'react'\nimport Top5Item from './Top5Item.js'\nimport List from '@mui/material/List';\nimport { ListItem, Typography } from '@mui/material'\nimport { GlobalStoreContext } from '../store/index.js'\nimport { useParams } from 'react-router-dom'\nimport AuthContext from '../auth'\nimport { TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Grid } from '@mui/material';\nimport { Button } from '@mui/material';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction WorkspaceScreen() {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    let {id} = useParams();\n    console.log(id);\n\n    const [text1, setText1] = useState(store.currentList.items[0]);\n    const [text2, setText2] = useState(store.currentList.items[1]);\n    const [text3, setText3] = useState(store.currentList.items[2]);\n    const [text4, setText4] = useState(store.currentList.items[3]);\n    const [text5, setText5] = useState(store.currentList.items[4]);\n    const [title, setTitle] = useState(store.currentList.name);\n\n    function handleUpdateText1(event) {\n        console.log(event.target.value);\n        setText1(event.target.value);\n    }\n\n    function handleUpdateText2(event) {\n        console.log(event.target.value);\n        setText2(event.target.value);\n    }\n\n    function handleUpdateText3(event) {\n        console.log(event.target.value);\n        setText3(event.target.value);\n    }\n\n    function handleUpdateText4(event) {\n        console.log(event.target.value);\n        setText4(event.target.value);\n    }\n\n    function handleUpdateText5(event) {\n        console.log(event.target.value);\n        setText5(event.target.value);\n    }\n\n    function handleTitle(event){\n        console.log(event.target.value);\n        setTitle(event.target.value);\n    }\n\n    function readyForPublish(){\n        // Check if items and title all have names and are not empty\n        if (text1 === \"\" || text2 === \"\" || text3 === \"\" || text4 === \"\" || text5 === \"\" || title === \"\"){\n            return true;\n        }\n\n        let s = new Set();\n        s.add(text1.toLowerCase());\n        s.add(text2.toLowerCase());\n        s.add(text3.toLowerCase());\n        s.add(text4.toLowerCase());\n        s.add(text5.toLowerCase());\n        if (s.size !== 5){\n            return true;\n        }\n\n        // Now check if the title name isnt the same as a published title\n        let a = store.idNamePairs.filter(list => list.email === auth.user.email).filter(list => list.date !== \"edit\").filter(list => list.name === title);\n        console.log(a);\n        if (a.length !== 0){\n            return true;\n        }\n\n        return false;\n    }\n\n    function save(){\n        store.saveEdit(text1, text2, text3, text4, text5, title);\n    }\n\n    function publish(){\n        console.log(\"local\");\n        store.publishList(text1, text2, text3, text4, text5, title);\n    }\n\n    if (!store.idNamePairs){\n        auth.logoutUser(\"\",\"\");\n    }\n\n    let a = store.idNamePairs.filter(e => e._id === id);\n    if (!a){\n        auth.logoutUser(\"\",\"\");\n    }\n\n    let editItems = \n            /*<List id=\"edit-items\" sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                {\n                    store.currentList.items.map((item, index) => (\n                        <Top5Item \n                            key={'top5-item-' + (index+1)}\n                            text={item}\n                            index={index} \n                        />\n                    ))\n                }\n            </List>;*/\n            <List id=\"edit-items\" sx={{ width: '100%', bgcolor: 'background.paper' }} style={{backgroundColor: \"darkblue\"}}>\n                <ListItem className=\"top5-item\" sx={{ display: 'flex', p: 1 }} style={{ ontSize: '48pt', width: '100%' }}>\n                    <TextField sx={{ p: 0 }}\n                        defaultValue={store.currentList.items[0]}\n                        style={{backgroundColor: \"gold\"}}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='list-card'\n                        inputProps={{style: {fontSize: 30}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                        onChange={handleUpdateText1}\n                    ></TextField>\n                </ListItem>\n\n                <ListItem className=\"top5-item\" sx={{ display: 'flex', p: 1 }} style={{ ontSize: '48pt', width: '100%' }}>\n                    <TextField sx={{ p: 0 }}\n                        style={{backgroundColor: \"gold\"}}\n                        defaultValue={store.currentList.items[1]}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='list-card'\n                        inputProps={{style: {fontSize: 30}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                        onChange={handleUpdateText2}\n                    ></TextField>\n                </ListItem>\n\n                <ListItem className=\"top5-item\" sx={{ display: 'flex', p: 1 }} style={{ ontSize: '48pt', width: '100%' }}>\n                    <TextField sx={{ p: 0 }}\n                        style={{backgroundColor: \"gold\"}}\n                        defaultValue={store.currentList.items[2]}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='list-card'\n                        inputProps={{style: {fontSize: 30}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                        onChange={handleUpdateText3}\n                    ></TextField>\n                </ListItem>\n\n                <ListItem className=\"top5-item\" sx={{ display: 'flex', p: 1 }} style={{ ontSize: '48pt', width: '100%' }}>\n                    <TextField sx={{ p: 0 }}\n                        style={{backgroundColor: \"gold\"}}\n                        defaultValue={store.currentList.items[3]}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='list-card'\n                        inputProps={{style: {fontSize: 30}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                        onChange={handleUpdateText4}\n                    ></TextField>\n                </ListItem>\n\n                <ListItem className=\"top5-item\" sx={{ display: 'flex', p: 1 }} style={{ ontSize: '48pt', width: '100%' }}>\n                    <TextField sx={{ p: 0 }}\n                        style={{backgroundColor: \"gold\"}}\n                        defaultValue={store.currentList.items[4]}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='list-card'\n                        inputProps={{style: {fontSize: 30}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                        onChange={handleUpdateText5}\n                    ></TextField>\n                </ListItem>\n                <Button onClick={save} variant=\"contained\" style={{left:'80%', color:\"black\", backgroundColor:\"white\"}}>\n                    Save\n                </Button>\n                <Button onClick={publish} disabled={readyForPublish()} variant=\"contained\" style={{left:'85%', color:\"black\", backgroundColor:\"white\"}}>\n                    Publish\n                </Button>\n            </List>\n\n    return (\n        <div id=\"top5-workspace\">\n            <TextField onChange={handleTitle} defaultValue={store.currentList.name} style={{backgroundColor: \"white\", width:'50%'}} sx={{p:1}} margin=\"none\">\n            </TextField>\n            <div id=\"workspace-edit\">\n                <div id=\"edit-numbering\">\n                    <div className=\"item-number\"><Typography sx={{p:0, pl:10, pr:10, borderRadius: 5}} style={{backgroundColor:\"gold\"}} variant=\"h3\">1.</Typography></div>\n                    <div className=\"item-number\"><Typography sx={{p:0, pl:10, pr:10, borderRadius: 5}} style={{backgroundColor:\"gold\"}} variant=\"h3\">2.</Typography></div>\n                    <div className=\"item-number\"><Typography sx={{p:0, pl:10, pr:10, borderRadius: 5}} style={{backgroundColor:\"gold\"}} variant=\"h3\">3.</Typography></div>\n                    <div className=\"item-number\"><Typography sx={{p:0, pl:10, pr:10, borderRadius: 5}} style={{backgroundColor:\"gold\"}} variant=\"h3\">4.</Typography></div>\n                    <div className=\"item-number\"><Typography sx={{p:0, pl:10, pr:10, borderRadius: 5}} style={{backgroundColor:\"gold\"}} variant=\"h3\">5.</Typography></div>\n                </div>\n                {editItems}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default WorkspaceScreen;","/Users/ghost/Desktop/316-FinalProject/client/src/components/DeleteModal.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/ErrorModal.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/api/index.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Copyright.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Community.js",["144","145","146","147","148","149","150","151","152"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/AllLists.js",["153","154","155","156","157","158","159","160","161","162"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/UserLists.js",["163","164","165","166","167","168","169","170","171"],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":30,"column":8,"nodeType":"178","endLine":30,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":56,"column":13,"nodeType":"182","messageId":"183","endLine":62,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":273,"column":13,"nodeType":"186","messageId":"187","endLine":273,"endColumn":27},{"ruleId":"184","severity":1,"message":"188","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":19},{"ruleId":"184","severity":1,"message":"189","line":65,"column":11,"nodeType":"186","messageId":"187","endLine":65,"endColumn":30},{"ruleId":"184","severity":1,"message":"190","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"191","line":4,"column":15,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"184","severity":1,"message":"192","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":18},{"ruleId":"184","severity":1,"message":"196","line":12,"column":10,"nodeType":"186","messageId":"187","endLine":12,"endColumn":15},{"ruleId":"176","severity":1,"message":"197","line":24,"column":8,"nodeType":"178","endLine":24,"endColumn":10,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"199","line":26,"column":14,"nodeType":"186","messageId":"187","endLine":26,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":37,"column":107,"nodeType":"202","messageId":"203","endLine":37,"endColumn":115},{"ruleId":"184","severity":1,"message":"204","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":16},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":15},{"ruleId":"184","severity":1,"message":"205","line":49,"column":14,"nodeType":"186","messageId":"187","endLine":49,"endColumn":28},{"ruleId":"184","severity":1,"message":"206","line":55,"column":14,"nodeType":"186","messageId":"187","endLine":55,"endColumn":30},{"ruleId":"184","severity":1,"message":"207","line":18,"column":9,"nodeType":"186","messageId":"187","endLine":18,"endColumn":13},{"ruleId":"184","severity":1,"message":"196","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":13},{"ruleId":"184","severity":1,"message":"208","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":16},{"ruleId":"184","severity":1,"message":"209","line":9,"column":10,"nodeType":"186","messageId":"187","endLine":9,"endColumn":13},{"ruleId":"184","severity":1,"message":"210","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":14},{"ruleId":"184","severity":1,"message":"190","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"191","line":4,"column":15,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"184","severity":1,"message":"192","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":18},{"ruleId":"184","severity":1,"message":"211","line":19,"column":13,"nodeType":"186","messageId":"187","endLine":19,"endColumn":17},{"ruleId":"176","severity":1,"message":"197","line":23,"column":8,"nodeType":"178","endLine":23,"endColumn":10,"suggestions":"212"},{"ruleId":"200","severity":1,"message":"201","line":32,"column":125,"nodeType":"202","messageId":"203","endLine":32,"endColumn":133},{"ruleId":"184","severity":1,"message":"190","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"213","line":4,"column":15,"nodeType":"186","messageId":"187","endLine":4,"endColumn":29},{"ruleId":"184","severity":1,"message":"191","line":4,"column":31,"nodeType":"186","messageId":"187","endLine":4,"endColumn":41},{"ruleId":"184","severity":1,"message":"192","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":18},{"ruleId":"184","severity":1,"message":"211","line":19,"column":13,"nodeType":"186","messageId":"187","endLine":19,"endColumn":17},{"ruleId":"176","severity":1,"message":"197","line":23,"column":8,"nodeType":"178","endLine":23,"endColumn":10,"suggestions":"214"},{"ruleId":"200","severity":1,"message":"201","line":33,"column":107,"nodeType":"202","messageId":"203","endLine":33,"endColumn":115},{"ruleId":"184","severity":1,"message":"190","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"191","line":4,"column":15,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"184","severity":1,"message":"192","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"193","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":12},{"ruleId":"184","severity":1,"message":"194","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":18},{"ruleId":"184","severity":1,"message":"211","line":19,"column":13,"nodeType":"186","messageId":"187","endLine":19,"endColumn":17},{"ruleId":"176","severity":1,"message":"197","line":23,"column":8,"nodeType":"178","endLine":23,"endColumn":10,"suggestions":"215"},{"ruleId":"200","severity":1,"message":"201","line":32,"column":125,"nodeType":"202","messageId":"203","endLine":32,"endColumn":133},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["218"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-unused-vars","'uniqueListName' is assigned a value but never used.","Identifier","unusedVar","'EditToolbar' is defined but never used.","'handleCreateNewList' is assigned a value but never used.","'Fab' is defined but never used.","'Typography' is defined but never used.","'AddIcon' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["219"],"'handleCreateNewList' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'ListItem' is defined but never used.","'handleLoadList' is defined but never used.","'handleToggleEdit' is defined but never used.","'text' is assigned a value but never used.","'Top5Item' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'auth' is assigned a value but never used.",["220"],"'stepperClasses' is defined but never used.",["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},{"desc":"225","fix":"228"},{"desc":"225","fix":"229"},"Update the dependencies array to be: [auth]",{"range":"230","text":"231"},"Update the dependencies array to be: [store]",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"233"},{"range":"236","text":"233"},[806,808],"[auth]",[807,809],"[store]",[767,769],[782,784],[767,769]]