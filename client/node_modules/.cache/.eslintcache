[{"/Users/ghost/Desktop/316-FinalProject/client/src/index.js":"1","/Users/ghost/Desktop/316-FinalProject/client/src/App.js":"2","/Users/ghost/Desktop/316-FinalProject/client/src/reportWebVitals.js":"3","/Users/ghost/Desktop/316-FinalProject/client/src/auth/index.js":"4","/Users/ghost/Desktop/316-FinalProject/client/src/store/index.js":"5","/Users/ghost/Desktop/316-FinalProject/client/src/components/index.js":"6","/Users/ghost/Desktop/316-FinalProject/client/src/common/jsTPS.js":"7","/Users/ghost/Desktop/316-FinalProject/client/src/components/AppBanner.js":"8","/Users/ghost/Desktop/316-FinalProject/client/src/components/EditToolbar.js":"9","/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeScreen.js":"10","/Users/ghost/Desktop/316-FinalProject/client/src/transactions/MoveItem_Transaction.js":"11","/Users/ghost/Desktop/316-FinalProject/client/src/components/RegisterScreen.js":"12","/Users/ghost/Desktop/316-FinalProject/client/src/components/ListCard.js":"13","/Users/ghost/Desktop/316-FinalProject/client/src/components/SplashScreen.js":"14","/Users/ghost/Desktop/316-FinalProject/client/src/transactions/UpdateItem_Transaction.js":"15","/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeWrapper.js":"16","/Users/ghost/Desktop/316-FinalProject/client/src/components/Statusbar.js":"17","/Users/ghost/Desktop/316-FinalProject/client/src/components/Top5Item.js":"18","/Users/ghost/Desktop/316-FinalProject/client/src/components/LoginScreen.js":"19","/Users/ghost/Desktop/316-FinalProject/client/src/components/WorkspaceScreen.js":"20","/Users/ghost/Desktop/316-FinalProject/client/src/components/DeleteModal.js":"21","/Users/ghost/Desktop/316-FinalProject/client/src/components/ErrorModal.js":"22","/Users/ghost/Desktop/316-FinalProject/client/src/api/index.js":"23","/Users/ghost/Desktop/316-FinalProject/client/src/components/Copyright.js":"24","/Users/ghost/Desktop/316-FinalProject/client/src/components/Community.js":"25","/Users/ghost/Desktop/316-FinalProject/client/src/components/AllLists.js":"26","/Users/ghost/Desktop/316-FinalProject/client/src/components/UserLists.js":"27"},{"size":928,"mtime":1637788529808,"results":"28","hashOfConfig":"29"},{"size":1622,"mtime":1638463675141,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1637788529809,"results":"31","hashOfConfig":"29"},{"size":5521,"mtime":1638379687729,"results":"32","hashOfConfig":"29"},{"size":19927,"mtime":1638473371699,"results":"33","hashOfConfig":"29"},{"size":1024,"mtime":1638380212615,"results":"34","hashOfConfig":"29"},{"size":6473,"mtime":1637788529805,"results":"35","hashOfConfig":"29"},{"size":8920,"mtime":1638475458205,"results":"36","hashOfConfig":"29"},{"size":1581,"mtime":1637788529806,"results":"37","hashOfConfig":"29"},{"size":2139,"mtime":1638464594822,"results":"38","hashOfConfig":"29"},{"size":703,"mtime":1637788529809,"results":"39","hashOfConfig":"29"},{"size":5902,"mtime":1638493753443,"results":"40","hashOfConfig":"29"},{"size":10729,"mtime":1638473597328,"results":"41","hashOfConfig":"29"},{"size":414,"mtime":1637933907906,"results":"42","hashOfConfig":"29"},{"size":726,"mtime":1637788529809,"results":"43","hashOfConfig":"29"},{"size":400,"mtime":1638197060925,"results":"44","hashOfConfig":"29"},{"size":1218,"mtime":1638398264571,"results":"45","hashOfConfig":"29"},{"size":4401,"mtime":1638317089393,"results":"46","hashOfConfig":"29"},{"size":3630,"mtime":1638494328261,"results":"47","hashOfConfig":"29"},{"size":9562,"mtime":1638493276347,"results":"48","hashOfConfig":"29"},{"size":1518,"mtime":1637788529806,"results":"49","hashOfConfig":"29"},{"size":1193,"mtime":1637788529806,"results":"50","hashOfConfig":"29"},{"size":1866,"mtime":1637788529804,"results":"51","hashOfConfig":"29"},{"size":452,"mtime":1637788529805,"results":"52","hashOfConfig":"29"},{"size":56,"mtime":1638392250196,"results":"53","hashOfConfig":"29"},{"size":1521,"mtime":1638464912952,"results":"54","hashOfConfig":"29"},{"size":56,"mtime":1638386566218,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"rdr87g",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/ghost/Desktop/316-FinalProject/client/src/index.js",[],["116","117"],"/Users/ghost/Desktop/316-FinalProject/client/src/App.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/reportWebVitals.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/auth/index.js",["118","119"],"import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER:    \"LOGIN_USER\",\n    LOGOUT_USER:   \"LOGUT_USER\",\n    SET_ERR:       \"SET_ERR\",\n    REMOVE_ERR:    \"REMOVE_ERR\"\n\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        error: null,\n        guest: false\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    error: null\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: null\n                })\n            }\n            case AuthActionType.LOGIN_USER:{\n                return setAuth ({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: null\n                })\n            }\n            case AuthActionType.LOGIN_USER:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            case AuthActionType.SET_ERR:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: payload.message\n                })\n            }\n            case AuthActionType.LOGOUT_USER:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            case AuthActionType.REMOVE_ERR:{\n                return setAuth ({\n                    user: null,\n                    loggedIn: false,\n                    error: null\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.removeError = function () {\n        authReducer({\n            type: AuthActionType.REMOVE_ERR,\n            payload: {\n                loggedIn: null,\n                user: null\n            }\n        });\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.GET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n        }\n    }\n\n    auth.logoutUser = async function(userData, store){\n        console.log(\"trying to logou\");\n        authReducer({\n            type: AuthActionType.LOGOUT_USER,\n            payload: {\n                user: null\n            }\n        })\n        history.push(\"/\");\n        \n    }\n\n    auth.loginUser = async function(userData, store){\n        console.log(\"Attempting to Login\");\n\n        let response;\n        let error;\n\n        try {\n            response = await api.loginUser(userData);\n        } catch (err){\n            error = err.response.data.errorMessage;\n        }\n\n        //console.log(error);\n\n        if (response){\n            if (response.status === 200) {\n                console.log(response);\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                    user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n                // set home here\n            }\n        } else {\n            authReducer({\n                type: AuthActionType.SET_ERR,\n                payload: {\n                    message: error\n                }\n            });\n            console.log(\"Here\");\n        }\n    }\n\n    auth.registerUser = async function(userData, store) {\n        console.log(\"Trying to reegisster User\");\n        let response;\n        let error;\n\n        try {\n            response = await api.registerUser(userData);\n        } catch (err){\n            error = err.response.data.errorMessage;\n        }    \n\n        if (response){\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n            }\n        } else {\n            authReducer({\n                type: AuthActionType.SET_ERR,\n                payload: {\n                    message: error\n                }\n            });\n            console.log(error);\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","/Users/ghost/Desktop/316-FinalProject/client/src/store/index.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/index.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/common/jsTPS.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/AppBanner.js",["120","121","122","123"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/EditToolbar.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeScreen.js",["124","125","126","127","128","129","130","131","132"],"import React, { useContext, useEffect } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport ListCard from './ListCard.js'\nimport { Fab, Typography } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport List from '@mui/material/List';\nimport AuthContext from '../auth'\nimport DeleteModal from './DeleteModal'\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport { Grid } from '@mui/material';\nimport { Paper } from '@mui/material';\n/*\n    This React component lists all the top5 lists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst HomeScreen = () => {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n\n    useEffect(() => {\n        store.loadIdNamePairs();\n    }, []);\n\n    function handleCreateNewList() {\n        console.log(\"Asd\");\n        store.createNewList();\n    }\n    let listCard = \"\";\n    console.log(store.idNamePairs);\n    if (store) {\n        listCard = \n            <Grid container spacing={1} direction=\"row\" sx={{pl:3}}>\n                {\n                store.idNamePairs.filter(pair => pair.email === auth.user.email).map((pair) => (\n                    <ListCard\n                        key={pair._id}\n                        idNamePair={pair}\n                        selected={false}\n                    />\n                ))\n            }\n            </Grid>\n            /*<List sx={{top: '1%', width: '90%', left: '5%', bgcolor: 'background.paper' }}>\n            {\n                store.idNamePairs.filter(pair => pair.email === auth.user.email).map((pair) => (\n                    <ListCard\n                        key={pair._id}\n                        idNamePair={pair}\n                        selected={false}\n                    />\n                ))\n            }\n            <Divider />\n            </List>;*/\n    }\n    return (\n        <div id=\"top5-list-selector\">\n            <div id=\"list-selector-list\">\n                {\n                    listCard\n                }\n            </div>\n            <DeleteModal />\n        </div>)\n}\n\nexport default HomeScreen;","/Users/ghost/Desktop/316-FinalProject/client/src/transactions/MoveItem_Transaction.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/RegisterScreen.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/ListCard.js",["133","134","135","136"],"import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport { Collapse } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport AuthContext from '../auth';\n\n/*\n    This is a card in our list of top 5 lists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    const [editActive, setEditActive] = useState(false);\n    const [text, setText] = useState(\"\");\n    const { idNamePair } = props;\n    const [open, setOpen] = useState(false); // Will help with opening/closing collapse\n\n    function handleClick () {\n        setOpen(!open);\n        if (!open){\n            if  (idNamePair.date !== \"edit\")\n                addView()\n        }\n      };\n\n    function addView(){\n        console.log(\"In addView\");\n        store.addView(idNamePair._id);\n    }\n\n    function handleLoadList(event, id) {\n        if (!event.target.disabled) {\n            // CHANGE THE CURRENT LIST\n        }\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsListNameEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    async function handleDeleteList(event, id) {\n        event.stopPropagation();\n        store.markListForDeletion(id);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        console.log(\"update text\");\n        setText(event.target.value);\n    }\n\n    function handleKeyEnter(event) {\n        if (event.code === \"Enter\") {\n            console.log(text);\n            store.addComment(idNamePair._id, text);\n            setText(\"\");\n            event.target.value = \"\";\n        }\n    }\n\n    function handleEdit(){\n        store.setCurrentList(idNamePair._id);\n    }\n\n    let bgc = \"lightblue\";\n    if (idNamePair.date === \"edit\"){\n        bgc = \"lightyellow\";\n    }\n\n    let edPub = \n        <Button onClick={handleEdit} style={{color: \"red\", textDecoration: \"underline\"}} variant=\"text\">\n            Edit\n        </Button>\n\n    if (idNamePair.date !== \"edit\"){\n        edPub = \n            <span> Published: {idNamePair.date}</span>\n    }\n\n    let comment = \"\";\n\n    if (idNamePair.date !== \"edit\"){\n        comment = <TextField onChange={handleUpdateText} onKeyPress={handleKeyEnter} fullWidth={true} label={\"Add Comment\"} id=\"outlined-basic\" variant=\"outlined\" ></TextField>;\n    }\n\n    let cardElement =\n        <Grid item xs={12} sx={{p:0,borderRadius: 5}} mt={2} style={{backgroundColor:bgc}}>\n                <Grid container spacing={0}>\n                    <Grid item xs={11}>\n                        <Typography variant=\"h5\"> {idNamePair.name} </Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbUpIcon />\n                    </IconButton>\n                    {idNamePair.likes}\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbDownIcon />\n                    </IconButton>\n                    {idNamePair.dislikes}\n                    <IconButton onClick={(event) => {\n                        handleDeleteList(event, idNamePair._id)\n                    }} aria-label='delete'>\n                        <DeleteIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                    </Grid>\n                </Grid>\n                <Box style={{fontSize:'20pt'}}>\n                    \n                    \n                </Box>\n                <Collapse in={open}>\n                <Grid container>\n                    <Grid item xs={6} sx={{p:1}}>\n                        {\n                            idNamePair.items.map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {index+1}. {item}\n                                </Typography>\n                            ))\n                        }\n                    </Grid>\n                    <Grid container direction={\"row\"} xs={6}>\n                        \n                        <Grid item sx={{p:1}} xs={12}><Paper style={{maxHeight:100, overflow: 'auto'}}>\n                        {\n                            idNamePair.comments.slice(0).reverse().map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {item}\n                                </Typography>\n                            ))\n                        }\n                        </Paper></Grid>\n                        <Grid item sx={{ flexGrow: 1,p:1 }}>                        \n                            {comment}\n                        </Grid>\n                    </Grid>\n                </Grid>\n        </Collapse>\n                <Box>\n                    <Typography sx={{p:1}}>By: {auth.user.firstName} {auth.user.lastName}</Typography>\n                </Box>\n                <Grid container>\n                    <Grid item xs={11}>\n                    {edPub}\n                    </Grid>\n                    <Grid item xs={1}>\n                    Views: {idNamePair.views}\n                    <IconButton onClick={handleClick} aria-label='delete'>\n                        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </IconButton>\n                    </Grid>\n                    \n                </Grid>\n        </Grid>\n    /*<List>\n        <Divider />\n        <ListItem\n            disabled={store.isListNameEditActive} \n            id={idNamePair._id}\n            key={idNamePair._id}\n            sx={{ marginTop: '0px', display: 'flex', pl: 1, pt: 0 , backgroundColor: \"white\"}}\n            button={false}\n            style={{\n                fontSize: '20pt',\n                width: '100%',\n            }}\n        >\n\n                <Box sx={{ p: 0, flexGrow: 1 }}>{idNamePair.name}</Box>\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbUpIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                    {idNamePair.likes}\n                </Box>\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={handleToggleEdit} aria-label='edit'>\n                        <ThumbDownIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                    {idNamePair.dislikes}\n                </Box>\n                <Divider />\n                <Box sx={{ p: 1 }}>\n                    <IconButton onClick={(event) => {\n                        handleDeleteList(event, idNamePair._id)\n                    }} aria-label='delete'>\n                        <DeleteIcon style={{fontSize:'20pt'}} />\n                    </IconButton>\n                </Box>\n                \n        </ListItem>\n        <Collapse in={open}>\n                <Grid container>\n                    <Grid item xs={6} sx={{p:1}}>\n                        {\n                            idNamePair.items.map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {index+1}. {item}\n                                </Typography>\n                            ))\n                        }\n                    </Grid>\n                    <Grid container direction={\"row\"} xs={6}>\n                        \n                        <Grid item sx={{p:1}} xs={12}><Paper style={{maxHeight:100, overflow: 'auto'}}>\n                        {\n                            idNamePair.comments.slice(0).reverse().map((item, index) => (\n                                <Typography sx={{left: \"5px\"}}variant=\"h5\" component=\"h5\">\n                                    {item}\n                                </Typography>\n                            ))\n                        }\n                        </Paper></Grid>\n                        <Grid item sx={{ flexGrow: 1,p:1 }}>                        \n                            {comment}\n                        </Grid>\n                    </Grid>\n                </Grid>\n        </Collapse>\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>  \n                <Box sx={{ p: 1, display: 'flex', flexGrow: 1, backgroundColor: \"white\" }}>\n                    {edPub}\n                </Box>\n                <Box>\n                    <Typography sx={{p: 1}}>\n                        Views: {idNamePair.views}\n                    </Typography>\n                </Box>\n                <Box sx={{ backgroundColor: \"white\" }}>\n                    <IconButton onClick={handleClick} aria-label='delete'>\n                        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </IconButton>\n                </Box>\n            </Box>\n        </List>*/\n\n    if (editActive) {\n        cardElement =\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id={\"list-\" + idNamePair._id}\n                label=\"Top 5 List Name\"\n                name=\"name\"\n                autoComplete=\"Top 5 List Name\"\n                className='list-card'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={idNamePair.name}\n                inputProps={{style: {fontSize: 48}}}\n                InputLabelProps={{style: {fontSize: 24}}}\n                autoFocus\n            />\n    }\n    return (\n        cardElement\n    );\n}\n\nexport default ListCard;","/Users/ghost/Desktop/316-FinalProject/client/src/components/SplashScreen.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/transactions/UpdateItem_Transaction.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/HomeWrapper.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Statusbar.js",["137"],"import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport AddIcon from '@mui/icons-material/Add';\nimport Fab from '@mui/material/Fab';\nimport { Box } from '@mui/system';\nimport AuthContext from '../auth'\n\n/*\n    Our Status bar React component goes at the bottom of our UI.\n    \n    @author McKilla Gorilla\n*/\nfunction Statusbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    let text =\"\";\n    if (store.currentList)\n        text = store.currentList.name;\n\n    function handleCreateNewList() {\n        store.createNewList();\n    }\n\n    let con = \"\";\n    console.log(\"tesadfsdafdst\", store.whichLists);\n    if (store.whichLists === \"\" && auth.user !== null){\n        con = \n            <Box>\n                <Fab \n                    color=\"primary\" \n                    aria-label=\"add\"\n                    id=\"add-list-button\"\n                    onClick={handleCreateNewList}\n                >\n                    <AddIcon />\n                </Fab>\n                Create New List\n            </Box>;\n        }\n    return (\n        <div id=\"top5-statusbar\">\n            {con}\n        </div>\n    );\n}\n\nexport default Statusbar;","/Users/ghost/Desktop/316-FinalProject/client/src/components/Top5Item.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/LoginScreen.js",["138"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/WorkspaceScreen.js",["139","140","141"],"/Users/ghost/Desktop/316-FinalProject/client/src/components/DeleteModal.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/ErrorModal.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/api/index.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Copyright.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/Community.js",[],"/Users/ghost/Desktop/316-FinalProject/client/src/components/AllLists.js",["142","143","144","145","146","147","148","149"],"import React, { useContext, useEffect } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport ListCard from './ListCard.js'\nimport { Fab, Typography } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport List from '@mui/material/List';\nimport AuthContext from '../auth'\nimport DeleteModal from './DeleteModal'\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport { Grid } from '@mui/material';\n/*\n    This React component lists all the top5 lists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst AllLists = () => {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n\n    useEffect(() => {\n        store.loadIdNamePairs();\n    }, []);\n\n    let listCard = \"\";\n    console.log(store.idNamePairs);\n    if (store) {\n        listCard = \n            <Grid container spacing={1} direction=\"row\" sx={{pl:3}}>\n            {\n                store.idNamePairs.filter(pair => pair.date !== \"edit\").map((pair) => (\n                    <ListCard\n                        key={pair._id}\n                        idNamePair={pair}\n                        selected={false}\n                    />\n                ))\n            }\n            </Grid>;\n    }\n    return (\n        <div id=\"top5-list-selector\">\n            <div id=\"list-selector-list\">\n                {\n                    listCard\n                }\n            </div>\n            <DeleteModal />\n        </div>)\n}\n\nexport default AllLists;","/Users/ghost/Desktop/316-FinalProject/client/src/components/UserLists.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":30,"column":8,"nodeType":"156","endLine":30,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":56,"column":13,"nodeType":"160","messageId":"161","endLine":62,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":19},{"ruleId":"162","severity":1,"message":"166","line":25,"column":12,"nodeType":"164","messageId":"165","endLine":25,"endColumn":20},{"ruleId":"162","severity":1,"message":"167","line":32,"column":14,"nodeType":"164","messageId":"165","endLine":32,"endColumn":28},{"ruleId":"162","severity":1,"message":"168","line":46,"column":11,"nodeType":"164","messageId":"165","endLine":46,"endColumn":30},{"ruleId":"162","severity":1,"message":"169","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"170","line":4,"column":15,"nodeType":"164","messageId":"165","endLine":4,"endColumn":25},{"ruleId":"162","severity":1,"message":"171","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":15},{"ruleId":"162","severity":1,"message":"172","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":12},{"ruleId":"162","severity":1,"message":"173","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":15},{"ruleId":"162","severity":1,"message":"174","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":18},{"ruleId":"162","severity":1,"message":"175","line":12,"column":10,"nodeType":"164","messageId":"165","endLine":12,"endColumn":15},{"ruleId":"154","severity":1,"message":"176","line":24,"column":8,"nodeType":"156","endLine":24,"endColumn":10,"suggestions":"177"},{"ruleId":"162","severity":1,"message":"178","line":26,"column":14,"nodeType":"164","messageId":"165","endLine":26,"endColumn":33},{"ruleId":"162","severity":1,"message":"179","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":16},{"ruleId":"162","severity":1,"message":"172","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":12},{"ruleId":"162","severity":1,"message":"173","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":15},{"ruleId":"162","severity":1,"message":"180","line":49,"column":14,"nodeType":"164","messageId":"165","endLine":49,"endColumn":28},{"ruleId":"162","severity":1,"message":"181","line":18,"column":9,"nodeType":"164","messageId":"165","endLine":18,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"162","severity":1,"message":"182","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"183","line":9,"column":10,"nodeType":"164","messageId":"165","endLine":9,"endColumn":13},{"ruleId":"162","severity":1,"message":"184","line":10,"column":10,"nodeType":"164","messageId":"165","endLine":10,"endColumn":14},{"ruleId":"162","severity":1,"message":"169","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"170","line":4,"column":15,"nodeType":"164","messageId":"165","endLine":4,"endColumn":25},{"ruleId":"162","severity":1,"message":"171","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":15},{"ruleId":"162","severity":1,"message":"172","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":12},{"ruleId":"162","severity":1,"message":"173","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":15},{"ruleId":"162","severity":1,"message":"174","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":18},{"ruleId":"162","severity":1,"message":"185","line":19,"column":13,"nodeType":"164","messageId":"165","endLine":19,"endColumn":17},{"ruleId":"154","severity":1,"message":"176","line":23,"column":8,"nodeType":"156","endLine":23,"endColumn":10,"suggestions":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["189"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-unused-vars","'EditToolbar' is defined but never used.","Identifier","unusedVar","'criteria' is assigned a value but never used.","'updateCriteria' is defined but never used.","'handleCreateNewList' is assigned a value but never used.","'Fab' is defined but never used.","'Typography' is defined but never used.","'AddIcon' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["190"],"'handleCreateNewList' is defined but never used.","'ListItem' is defined but never used.","'handleLoadList' is defined but never used.","'text' is assigned a value but never used.","'Top5Item' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'auth' is assigned a value but never used.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},"Update the dependencies array to be: [auth]",{"range":"197","text":"198"},"Update the dependencies array to be: [store]",{"range":"199","text":"200"},{"range":"201","text":"200"},[806,808],"[auth]",[807,809],"[store]",[766,768]]